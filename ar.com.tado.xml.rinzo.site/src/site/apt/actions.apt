 -----
Eclipse xml editor 
 -----


Actions

%{toc|section=1|fromDepth=1}
  
* {Quick Assist}

  With the cursor standing in a tag or text content and pressing <<Ctrl-1>> a series of actions on that selected tact will be displayed:
  
[images/Ctrl1.png]

  * <<Rename Tag:>> Changes the tag's name including starting and ending tag.

  * <<Duplicate Tag:>> Creates a duplicated of the current tag.

  * <<Cut Tag:>> Removes the current tag and place it in the clipboard.

  * <<Surround With Tag:>> Creates a new tag surrounding the selected one taking care of indentation.

  * <<Comment With Tag:>> Surrounds the current tag with << <!-- >> and << --> >>

  * <<Delete Tag:>> Removes the current tag from file.

  * <<Delete Surrounding Tag:>> Removes the tag containing the current tag from file.

  * <<Surround With CDATA:>> Surrounds the current text content with CDATA element.

  * <<Escape HTML Characters:>> Escapes the string in the current text content using HTML entities.

  * <<Escape XML Characters:>> Escapes the string in the current text content using XML entities.

  []

  
* {Contextual Menu}

  The editor's contextual has a couple of actions specific to xml manipulation
  
[images/ContextualMenuActions.png]
  

** {Open Declaration}

  When the selected text corresponds to an existent class full qualified name, 
  the action Open Declaration will be enable, which opens the source of the selected full qualified class name.

** {Create Declaration}

  When the selected text corresponds to a non existent class full qualified name, 
  the action Create Declaration will be enable, making possible the creation of a class 
  with the selected full qualified class name.

** {Generate JAXB Parser}

  See this {{{./javaIntegration.html#JAXB_Integration}JAXB Integration}} 

** {Create XML Definition}

  This option is present on the editor and xml files contextual menus and allows to generate an xml definition (xsd, dtd, relax ng)
  using the selected elements as examples inputs. Using the following dialog it could be configured:
   
  * the location of the generated definition
  
  * format of the output definition (xml schema, dtd, relax ng in xml syntax or relax ng in compact syntax)
   
  * and also how line break length
  
  []
  
[images/CreateDeclarationDefininition.png]
  

** {Clear Errors and Warnings}

  As its name says this action will clean all errors and warnings on a opened document or selected files in the resources tree.

** {Escape XML characters}
 
  This action simply replaces all special characters in tag's attributes and bodies to the escaped
  version of them.
  
*-------------*-----------------------*
|| Unescaped  ||  Escaped             |
*-------------*-----------------------+
| á           | & #225;               |
*-------------*-----------------------+
| eleiçóes    | elei& #231;& #243;es  |
*-------------*-----------------------+

** {Escape HTML characters}
 
  This action simply replaces all special characters in tag's attributes and bodies to the escaped
  version of them.
  
*-------------*-----------------------*
|| Unescaped  ||  Escaped             |
*-------------*-----------------------+
| á           | &acute;               |
*-------------*-----------------------+
| eleiçóes    | elei&ccedil;&otilde;es|
*-------------*-----------------------+

** {Rename Tag}

  Allows to rename: 
  
  * A single tag.
  
  * All the tags with the same name inside the same container tag.
  
  * All the tags with the same name in the file.
  
  []
  
** {Clear Definitions Cache}

  This plugin handles automatically the cache of DTD and XSD used to validate files, but in case of a problem
  whith cached elements, this cache can be cleared by going to < Window-Preferences-Rinzo XML > and pressing <<"Clear Cache">> button
  After a cleaning this cache will be refilled by the new elements needed to validate the files opened from that moment.
